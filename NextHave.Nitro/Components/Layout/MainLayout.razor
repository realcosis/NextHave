@using NextHave.BL.Services.Settings

@inject ISettingsService settingsService

@inherits LayoutComponentBase

<HeadContent>
    <title>@hotelName @title</title>

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["tailwind.css"]" />
</HeadContent>

<div class="min-h-screen relative">

    <Header />

    <section class="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-surface via-surface-secondary to-surface-tertiary">

        <CascadingValue Value="hotelName">
            @Body
        </CascadingValue>

    </section>

    <Footer />

</div>

@code {
    string? hotelName => settingsService.GetSetting("hotel_name");

    [Parameter]
    public string? title { get; set; }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        base.SetParametersAsync(parameters);

        if (parameters.TryGetValue<string>("title", out var newTitle))
            title = newTitle;

        return Task.CompletedTask;
    }
}